{"version":3,"sources":["assets/images/heads.png","assets/images/tails.png","Coin.jsx","FlipCoin.jsx","App.js","index.js"],"names":["Coin","src","this","props","tossResult","heads","tails","alt","className","flipping","Component","FlipCoin","state","side","coinFlip","headsCount","tailsCount","flip","bind","resetCounts","flipLimit","stopFlip","startFlip","setInterval","setState","Math","floor","random","length","clearInterval","incrementCount","curState","onClick","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,kC,OCKnCA,E,4JACJ,WACE,OACE,qBACEC,IAA+B,UAA1BC,KAAKC,MAAMC,WAAyBC,EAAQC,EACjDC,IAAI,OACJC,UAAS,eAAUN,KAAKC,MAAMM,gB,GANnBC,aAYJV,ICbTW,G,wDAKJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXH,UAAU,EACVI,KAAM,EAAKV,MAAMW,SAAS,GAC1BC,WAAY,EACZC,WAAY,GAEd,EAAKC,KAAO,EAAKA,KAAKC,KAAV,gBAEZ,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVF,E,wCAanB,WAAQ,IAAD,OAEL,GACEhB,KAAKC,MAAMiB,YACXlB,KAAKU,MAAMG,WAAab,KAAKU,MAAMI,WAIrC,IAAIK,EAAW,EACTC,EAAYC,aAAY,WACJ,UAApB,EAAKX,MAAMC,KACb,EAAKW,UAAS,WACZ,MAAO,CAAEf,UAAU,EAAMI,KAAM,EAAKV,MAAMW,SAAS,OAGrD,EAAKU,UAAS,WACZ,MAAO,CAAEf,UAAU,EAAMI,KAAM,EAAKV,MAAMW,SAAS,OAItC,KAAbO,GACF,EAAKG,UAAS,WACZ,MAAO,CACLf,UAAU,EACVI,KAAM,EAAKV,MAAMW,SACfW,KAAKC,MAAMD,KAAKE,SAAW,EAAKxB,MAAMW,SAASc,aAIrDC,cAAcP,GACd,EAAKQ,kBAELT,MAED,O,4BAGL,WAC0B,UAApBnB,KAAKU,MAAMC,KACbX,KAAKsB,UAAS,SAACO,GACb,MAAO,CAAEhB,aAAcgB,EAAShB,eAGlCb,KAAKsB,UAAS,SAACO,GACb,MAAO,CAAEf,aAAce,EAASf,iB,yBAKtC,WACEd,KAAKsB,UAAS,WACZ,MAAO,CAAET,WAAY,EAAGC,WAAY,Q,oBAIxC,WACE,OACE,qCACE,8BACE,cAAC,EAAD,CACEZ,WAAYF,KAAKU,MAAMC,KACvBJ,SAAUP,KAAKU,MAAMH,SAAW,eAAiB,OAGrD,iDACmBP,KAAKU,MAAMG,WAD9B,aACoD,IACjDb,KAAKU,MAAMI,WAFd,iBAEwC,IACrCd,KAAKC,MAAMiB,UAAYlB,KAAKU,MAAMG,WAAab,KAAKU,MAAMI,WAA1D,UAEKd,KAAKC,MAAMiB,WACVlB,KAAKU,MAAMG,WAAab,KAAKU,MAAMI,YAHzC,+DAK8C,OAEjD,wBAAQgB,QAAS9B,KAAKe,KAAtB,4BACA,wBAAQe,QAAS9B,KAAKiB,YAAtB,0B,GA7FeT,cAAjBC,EACGsB,aAAe,CACpBnB,SAAU,CAAC,QAAS,SACpBM,UAAW,GAgGAT,QC5FAuB,MARf,WACE,OACE,qBAAK1B,UAAU,MAAf,SACE,cAAC,EAAD,OCDN2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e4b42a3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heads.de285d22.png\";","export default __webpack_public_path__ + \"static/media/tails.f6660367.png\";","import React, { Component } from 'react';\nimport './Coin.css';\nimport heads from './assets/images/heads.png';\nimport tails from './assets/images/tails.png';\n\nclass Coin extends Component {\n  render() {\n    return (\n      <img\n        src={this.props.tossResult === 'heads' ? heads : tails}\n        alt=\"coin\"\n        className={`Coin ${this.props.flipping}`}\n      />\n    );\n  }\n}\n\nexport default Coin;\n","import React, { Component } from 'react';\nimport Coin from './Coin';\nimport './FlipCoin.css';\n\nclass FlipCoin extends Component {\n  static defaultProps = {\n    coinFlip: ['heads', 'tails'],\n    flipLimit: 5,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipping: false,\n      side: this.props.coinFlip[0],\n      headsCount: 0,\n      tailsCount: 0,\n    };\n    this.flip = this.flip.bind(this);\n    // this.incrementCount = this.incrementCount.bind(this);\n    this.resetCounts = this.resetCounts.bind(this);\n  }\n\n  flip() {\n    //guard clause to prevent further flips from occuring\n    if (\n      this.props.flipLimit ===\n      this.state.headsCount + this.state.tailsCount\n    ) {\n      return;\n    }\n    let stopFlip = 0;\n    const startFlip = setInterval(() => {\n      if (this.state.side === 'heads') {\n        this.setState(() => {\n          return { flipping: true, side: this.props.coinFlip[1] };\n        });\n      } else {\n        this.setState(() => {\n          return { flipping: true, side: this.props.coinFlip[0] };\n        });\n      }\n\n      if (stopFlip === 10) {\n        this.setState(() => {\n          return {\n            flipping: false,\n            side: this.props.coinFlip[\n              Math.floor(Math.random() * this.props.coinFlip.length)\n            ],\n          };\n        });\n        clearInterval(startFlip);\n        this.incrementCount();\n      } else {\n        stopFlip++;\n      }\n    }, 500);\n  }\n\n  incrementCount() {\n    if (this.state.side === 'heads') {\n      this.setState((curState) => {\n        return { headsCount: ++curState.headsCount };\n      });\n    } else {\n      this.setState((curState) => {\n        return { tailsCount: ++curState.tailsCount };\n      });\n    }\n  }\n\n  resetCounts() {\n    this.setState(() => {\n      return { headsCount: 0, tailsCount: 0 };\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          <Coin\n            tossResult={this.state.side}\n            flipping={this.state.flipping ? 'CoinFlipping' : ''}\n          />\n        </div>\n        <p>\n          There have been {this.state.headsCount} heads and{' '}\n          {this.state.tailsCount} tails so far!{' '}\n          {this.props.flipLimit > this.state.headsCount + this.state.tailsCount\n            ? `${\n                this.props.flipLimit -\n                (this.state.headsCount + this.state.tailsCount)\n              } flips remaining!`\n            : `No more flips, reset to get more flips!`}{' '}\n        </p>\n        <button onClick={this.flip}>Click To Flip!</button>\n        <button onClick={this.resetCounts}>Reset</button>\n      </>\n    );\n  }\n}\n\nexport default FlipCoin;\n","import './App.css';\nimport FlipCoin from './FlipCoin';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FlipCoin />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}